{"version":3,"file":"game.js","sources":["/Users/nathanhood11/Documents/Code/builder/app/static/js/es6/game.es6.js"],"names":[],"mappings":"AAEA,CAAC,SAAS;AACR,CAAA,aAAY,CAAC;AAEb,CAAA,EAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;CAExB,SAAS,KAAI,CAAC,CAAC;AACb,CAAA,IAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACzB,CAAA,IAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACvB,CAAA,IAAC,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACjC,CAAA,IAAC,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAE,cAAa,CAAE,KAAI,CAAC,CAAC;AAC9C,CAAA,IAAC,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAE,eAAc,CAAE,KAAI,CAAC,CAAC;GAChD;AAED,CAFC,SAEQ,KAAI,CAAC;AAER,CAAJ,MAAI,CAAA,MAAM,EAAG,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC7C,CAAJ,MAAI,CAAA,IAAI,EAAG,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AAEpC,CAAA,IAAC,KAAK,CAAC;AACL,CAAA,QAAG,GAAE,QAAS,EAAA,OAAM,EAAA,QAAO,CAAA;AAC3B,CAAA,SAAI,CAAE,MAAK;AACX,CAAA,aAAQ,CAAE,OAAM;AAChB,CAAA,YAAO,YAAE,IAAI,CAAI;AAGf,CAAA,cAAO,IAAI,CAAC,IAAI,CAAC,CAAC;CAClB,gBAAS;OACV,CAAA;KACF,CAAC,CAAC;GACJ;CAED,SAAS,KAAI,CAAC;AACR,CAAJ,MAAI,CAAA,IAAI,EAAG,CAAA,CAAC,CAAC,IAAI,CAAC,CAAC;AACf,CAAJ,MAAI,CAAA,MAAM,EAAG,CAAA,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAEhC,CAAA,IAAC,KAAK,CAAC;AACL,CAAA,QAAG,GAAE,QAAS,EAAA,OAAM,EAAA,QAAO,CAAA;AAC3B,CAAA,SAAI,CAAE,MAAK;AACX,CAAA,aAAQ,CAAE,OAAM;AAChB,CAAA,YAAO,YAAE,CAAC,CAAI;AACZ,CAAA,WAAI,YAAY,CAAC,CAAC,CAAC,CAAC;OACrB,CAAA;KACF,CAAC,CAAC;GACJ;CAED,SAAS,UAAS,CAAC;AACb,CAAJ,MAAI,CAAA,MAAM,EAAG,CAAA,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AAE5C,CAAA,IAAC,KAAK,CAAC;AACL,CAAA,QAAG,GAAE,UAAW,EAAA,OAAM,CAAE;AACxB,CAAA,SAAI,CAAE,MAAK;AACX,CAAA,aAAQ,CAAE,OAAM;AAChB,CAAA,YAAO,YAAE,IAAI,CAAI;AACf,CAAA,QAAC,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;OACnC,CAAA;KACF,CAAC,CAAC;GACJ;CAED,SAAS,KAAI,CAAC;AACR,CAAJ,MAAI,CAAA,MAAM,EAAG,CAAA,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAEvC,CAAA,IAAC,KAAK,CAAC;AACL,CAAA,QAAG,CAAE,QAAO;AACZ,CAAA,SAAI,CAAE,OAAM;AACZ,CAAA,aAAQ,CAAE,OAAM;AAChB,CAAA,SAAI,CAAE,EAAC,MAAM,CAAC,OAAM,CAAC;AACrB,CAAA,YAAO,YAAE,IAAI,CAAI;AACf,CAAA,QAAC,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;OAC3B,CAAA;KACF,CAAC,CAAC;GACJ;CAED,SAAS,MAAK,CAAC,CAAC;AACV,CAAJ,MAAI,CAAA,IAAI,EAAG,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;AAE/C,CAAA,IAAC,KAAK,CAAC;AACL,CAAA,QAAG,CAAE,SAAQ;AACb,CAAA,SAAI,CAAE,OAAM;AACZ,CAAA,SAAI,CAAE,KAAI;AACV,CAAA,YAAO,YAAE,CAAC,CAAI;AACZ,CAAA,QAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3B,CAAA,QAAC,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAE,CAAA,CAAC,IAAI,CAAC,CAAC;AACtC,CAAA,QAAC,CAAC,WAAW,CAAC,KAAK,EAAC,UAAW,EAAA,CAAA,CAAC,SAAS,EAAA,IAAG,EAAC,CAAC;AAC9C,CAAA,cAAO,IAAI,CAAC,CAAC,CAAC,CAAC;OAChB,CAAA;KACF,CAAC,CAAC;AAEH,CAAA,IAAC,eAAe,EAAE,CAAC;GACpB;CAEF,CAAC,EAAE,CAAC","sourcesContent":["/* jshint unused:false */\n\n(function(){\n  'use strict';\n\n  $(document).ready(init);\n\n  function init(){\n    $('#login').click(login);\n    $('#seed').click(seed);\n    $('#getforest').click(getForest);\n    $('#forest').on('click', '.tree.alive', grow);//only trees with class 'alive' can be clicked\n    $('#forest').on('click', ':button#chop', chop);\n  }\n\n  function chop(){\n\n    var treeId = $(this).closest('.tree').data('id');\n    var tree = $(this).closest('.tree');\n\n    $.ajax({\n      url: `/tree/${treeId}/chop`,\n      type: 'PUT',\n      dataType: 'html',\n      success: user => {\n        // $('#wood').text(user.wood);\n        // $(tree[0]).removeClass('adult alive').addClass('chopped');\n        console.log(user);\n        debugger;\n      }\n    });\n  }\n\n  function grow(){\n    var tree = $(this);//allows us to retrieve 'this' at a particular moment\n    var treeId = $(this).data('id');\n\n    $.ajax({\n      url: `/tree/${treeId}/grow`,\n      type: 'PUT',\n      dataType: 'html',\n      success: t => {\n        tree.replaceWith(t);//replacing pre-existing tree with the newly saved and returned tree.\n      }\n    });\n  }\n\n  function getForest(){\n    var userId = $('#username').attr('data-id');//used this instead of .data so that the browser doesn't cache the value\n\n    $.ajax({\n      url: `/forest/${userId}`,//want the id in params, not query which is default\n      type: 'GET',\n      dataType: 'html',//tells what data we are expecting back from node\n      success: html => {//html that is being created by jade and then sent by node to this js\n        $('#forest').empty().append(html);\n      }\n    });\n  }\n\n  function seed(){//every time Plant Seed is clicked\n    var userId = $('#username').data('id');//extracting data id attribute we created\n\n    $.ajax({\n      url: '/seed',\n      type: 'POST',\n      dataType: 'html',\n      data: {userId:userId},\n      success: tree => {//same as getForest above. The tree is html\n        $('#forest').append(tree);\n      }\n    });\n  }\n\n  function login(e){// e brings in click event. We need to prevent the form from automatically submitting\n    var data = $(this).closest('form').serialize();\n\n    $.ajax({\n      url: '/login',\n      type: 'POST',\n      data: data,\n      success: r => {\n        $('#login').prev().val('');\n        $('#username').attr('data-id', r._id);//inserting _id of username object as attribute\n        $('#username').text(`Welcome ${r.username}!`);\n        console.log(r);\n      }\n    });\n\n    e.preventDefault();\n  }\n\n})();\n"]}